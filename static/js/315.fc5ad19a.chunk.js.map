{"version":3,"file":"static/js/315.fc5ad19a.chunk.js","mappings":"8LACA,EAA0B,yB,SCEpBA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,eAAGC,UAAWC,EAAd,UAA4BF,EAAK,MAA/C,EAEhB,IAEAD,EAAQI,WAAa,CACnBH,KAAMI,IAAAA,OAAAA,W,+FCRKC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,E,8BCCnC,EAAuB,0BAAvB,EAA+D,iCAA/D,EAA8G,iCAA9G,EAA8J,kCAA9J,EAAwM,2B,SCuFxM,EAlFoB,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEA,GAA6BC,EAAAA,EAAAA,aAAYR,GAAjCS,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UACTC,GAAWC,EAAAA,EAAAA,eAeXC,EAAY,WAChBR,EAAQ,IACRE,EAAU,GACX,EAEKO,EAAgB,SAAC,GAAiC,IAAD,IAA9BC,OAAUX,EAAoB,EAApBA,KAAMY,EAAc,EAAdA,MACvC,OAAQZ,GACN,IAAK,OACHC,EAAQW,GACR,MAEF,IAAK,SACHT,EAAUS,GACV,MAEF,QACE,OAEL,EAED,OACE,iCACE,eAAIpB,UAAWC,EAAf,SAA0B,eAC1B,kBAAMoB,SApCW,SAAAC,GACnBA,EAAEC,iBACqBV,EAAMW,MAC3B,SAAAC,GAAO,OAAIA,EAAQjB,KAAKkB,gBAAkBlB,EAAKkB,aAAxC,IAILC,MAAM,GAAD,OAAInB,EAAJ,4BACLO,GAASa,EAAAA,EAAAA,IAAW,CAAEpB,KAAAA,EAAME,OAAAA,KAEhCO,GACD,EAyBiCjB,UAAWC,EAAzC,WACE,mBAAOD,UAAWC,EAAlB,UAAmC,QAEjC,kBACE4B,SAAUX,EACVY,KAAK,OACLtB,KAAK,OACLY,MAAOZ,EACPuB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRjC,UAAWC,EACXiC,YAAY,mBAIhB,mBAAOlC,UAAWC,EAAlB,UAAmC,UAEjC,kBACE4B,SAAUX,EACVY,KAAK,MACLtB,KAAK,SACLY,MAAOV,EACPwB,YAAY,qBACZH,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRjC,UAAWC,QAIf,mBAAQ6B,KAAK,SAAS9B,UAAWC,EAAkBkC,SAAUrB,EAA7D,SAAwE,qBAM/E,E,6BCtFYsB,EAAe,SAAA/B,GAAK,OAAIA,EAAMgC,MAAV,ECCjC,EAAuB,0BAAvB,EAAwD,0BAAxD,EAAyF,0BAAzF,EAA4H,4BAA5H,EAA0K,qCC+C1K,EAzCoB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,GAA6B1B,EAAAA,EAAAA,aAAYR,GAAjCS,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UACTuB,GAASzB,EAAAA,EAAAA,aAAYwB,GAC3B,GAA8C7B,EAAAA,EAAAA,UAAS,MAAvD,eAAOgC,EAAP,KAAwBC,EAAxB,KAEMzB,GAAWC,EAAAA,EAAAA,eACXyB,EAAmB5B,EAAMwB,QAAO,SAAAZ,GAAO,OAC3CA,EAAQjB,KAAKkB,cAAcgB,SAASL,EAAOX,cADA,IAIvCiB,EAAmB,mCAAG,WAAMC,GAAN,wEAC1BJ,EAAmBI,GADO,SAEpB7B,GAAS8B,EAAAA,EAAAA,IAAcD,IAFH,OAG1BJ,EAAmB,MAHO,2CAAH,sDAMzB,OACE,iCACE,eAAIxC,UAAWC,EAAf,SAAoC,aACnCqC,GACD,eAAItC,UAAWC,EAAf,SACGwC,EAAiBK,KAAI,gBAAGF,EAAH,EAAGA,GAAIpC,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACpB,gBAAIV,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,UACGO,EAAK,KAAGE,MAEX,mBACEV,UAAWC,EACX8C,QAAS,kBAAMJ,EAAoBC,EAA1B,EACTd,KAAK,SACLK,SAAUrB,GAAayB,IAAoBK,EAJ7C,SAMGL,IAAoBK,EAAK,cAAgB,aAVhBA,EADV,QAkB7B,E,UC7CD,EAAyB,uBAAzB,EAAwD,sBC2BxD,EAvBe,WACb,IAAMP,GAASzB,EAAAA,EAAAA,aAAYwB,GACrBrB,GAAWC,EAAAA,EAAAA,eAOjB,OACE,gBAAKhB,UAAWC,EAAhB,UACE,kBACE4B,SARiB,SAAAP,GACrB,IAAM0B,EAAO1B,EAAEH,OAAOC,MAAM6B,OAC5BlC,GAASmC,EAAAA,EAAAA,IAAUF,GACpB,EAMKhD,UAAWC,EACX6B,KAAK,OACLtB,KAAK,SACLY,MAAOiB,EACPH,YAAY,2BAInB,E,oBCMD,EAtBqB,WACnB,IAAMnB,GAAWC,EAAAA,EAAAA,eACjB,GAAoCJ,EAAAA,EAAAA,aAAYR,GAAxCS,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAAWqC,EAA1B,EAA0BA,MAK1B,OAJAC,EAAAA,EAAAA,YAAU,WACRrC,GAASsC,EAAAA,EAAAA,MACV,GAAE,CAACtC,KAGF,iCACE,SAAC,EAAD,IAEkB,IAAjBF,EAAMyC,QAAiBxC,GAAcqC,GAGpC,SAAC,EAAD,WACE,SAAC,EAAD,OAHF,SAACrD,EAAA,EAAD,CAASC,KAAK,wDAMfe,IAAcqC,GAA0B,IAAjBtC,EAAMyC,SAAgB,SAACC,EAAA,EAAD,MAGnD,C,mCCtBD,IAAIC,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAI9D,KAAO,sBACL8D,CAPL,CAQF,CAED,SAASE,IACP,OAAOT,CACR,CAHDA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNrD,OAAQqD,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASX,EACTY,QAASrB,EACTsB,YAAatB,EACbuB,WAAYd,EACZe,KAAMxB,EACNyB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBlC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAevE,UAAYuE,EAEpBA,CACR,C,uBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["webpack://react-homework-template/./src/components/Message/Message.module.css?e83e","components/Message/Message.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","redux/filter/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__fh13J\"};","import PropTypes from 'prop-types';\nimport css from './Message.module.css';\n\nconst Message = ({ text }) => <p className={css.message}>{text} </p>;\n\nexport default Message;\n\nMessage.protoTypes = {\n  text: PropTypes.string.isRequired,\n};\n","export const selectContacts = state => state.contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__label\":\"ContactForm_form__label__8W82B\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"form__button\":\"ContactForm_form__button__MT1Jk\",\"title\":\"ContactForm_title__jZguf\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { items, isLoading } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const nameInContacts = items.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    nameInContacts\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact({ name, number }));\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const onInputChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <h1 className={css.title}>Phonebook</h1>\n      <form onSubmit={onFormSubmit} className={css.form}>\n        <label className={css.form__label}>\n          Name\n          <input\n            onChange={onInputChange}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            className={css.form__input}\n            placeholder=\"Enter name\"\n          />\n        </label>\n\n        <label className={css.form__label}>\n          Number\n          <input\n            onChange={onInputChange}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            placeholder=\"Enter phone number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            className={css.form__input}\n          />\n        </label>\n\n        <button type=\"submit\" className={css.form__button} disabled={isLoading}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","export const selectFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"text\":\"ContactList_text__+NWAW\",\"button\":\"ContactList_button__7kL4l\",\"contacts__title\":\"ContactList_contacts__title__W8n9x\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport css from './ContactList.module.css';\n\nconst ContactList = ({ children }) => {\n  const { items, isLoading } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const [deletingContact, setDeletingContact] = useState(null);\n\n  const dispatch = useDispatch();\n  const filteredContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleDeleteContact = async id => {\n    setDeletingContact(id);\n    await dispatch(deleteContact(id));\n    setDeletingContact(null);\n  };\n\n  return (\n    <>\n      <h2 className={css.contacts__title}>Contacts</h2>\n      {children}\n      <ul className={css.list}>\n        {filteredContacts.map(({ id, name, number }) => (\n          <li className={css.item} key={id}>\n            <p className={css.text}>\n              {name}: {number}\n            </p>\n            <button\n              className={css.button}\n              onClick={() => handleDeleteContact(id)}\n              type=\"button\"\n              disabled={isLoading || deletingContact === id}\n            >\n              {deletingContact === id ? 'Deleting...' : 'Delete'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"input\":\"Filter_input__N7T3z\",\"title\":\"Filter_title__pSkfx\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    const data = e.target.value.trim();\n    dispatch(setFilter(data));\n  };\n\n  return (\n    <div className={css.filter}>\n      <input\n        onChange={onFilterChange}\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\" Find contact by name\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport Message from 'components/Message';\nimport Loader from 'components/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(selectContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n\n      {items.length === 0 && !isLoading && !error ? (\n        <Message text=\"You do not have any contacts in the phone book yet.\" />\n      ) : (\n        <ContactList>\n          <Filter />\n        </ContactList>\n      )}\n      {isLoading && !error && items.length === 0 && <Loader />}\n    </>\n  );\n};\nexport default ContactsPage;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Message","text","className","css","protoTypes","PropTypes","selectContacts","state","contacts","useState","name","setName","number","setNumber","useSelector","items","isLoading","dispatch","useDispatch","resetForm","onInputChange","target","value","onSubmit","e","preventDefault","find","contact","toLowerCase","alert","addContact","onChange","type","pattern","title","required","placeholder","disabled","selectFilter","filter","children","deletingContact","setDeletingContact","filteredContacts","includes","handleDeleteContact","id","deleteContact","map","onClick","data","trim","setFilter","error","useEffect","fetchContacts","length","Loader","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}